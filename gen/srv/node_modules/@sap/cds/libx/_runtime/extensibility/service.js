const cds = require('../cds')

const addExtension = require('./addExtension')
const { add, promote } = require('./add')
const { base, push, pull } = require('./push')
const { token } = require('./token')
const { transformExtendedFieldsCREATE, transformExtendedFieldsUPDATE } = require('./handler/transformWRITE')
const { transformExtendedFieldsREAD } = require('./handler/transformREAD')
const { transformExtendedFieldsRESULT } = require('./handler/transformRESULT')

module.exports = class ExtensibilityService extends cds.ApplicationService {
  init() {
    this.on('addExtension', addExtension)
    this.on('add', add)
    this.on('promote', promote)
    this.on('base', base)
    this.on('push', push)
    this.on('pull', pull)

    cds.on('served', () => cds.app.get('/-/cds/login/token', token))

    const { 'cds.xt.ModelProviderService': mps } = cds.services
    // REVISIT: mps._in_sidecar -> revisit options
    if (!mps?._in_sidecar)
      cds.db
        .before('CREATE', transformExtendedFieldsCREATE)
        .before('UPDATE', transformExtendedFieldsUPDATE)
        .before('READ', transformExtendedFieldsREAD)
        .after('READ', transformExtendedFieldsRESULT)

    return super.init()
  }

  // REVISIT: Do we want to keep this?
  get isExtensible() {
    return false
  }
}
