const cds = require('../index')
const Query = require('./Query')
require = path => { // eslint-disable-line no-global-assign
  const clazz = module.require (path); if (!clazz._api) return clazz
  Object.defineProperty (clazz.prototype, 'cmd', { value: path.match(/\w+$/)[0] })
  return clazz._api()
}

module.exports = Object.assign (_deprecated_srv_ql, { cdr: true,
  Query,
  SELECT: require('./SELECT'),
  INSERT: require('./INSERT'),
  UPDATE: require('./UPDATE'),
  DELETE: require('./DELETE'),
  CREATE: require('./CREATE'),
  DROP: require('./DROP'),
  clone(q) { return Query.prototype.clone.call(q) }
})

function _deprecated_srv_ql() { // eslint-disable-next-line no-console
  console.trace(`
    Method 'srv.ql(req)' is deprecated and superceded by 'cds.context'.
    Please use global SELECT instead of 'const { SELECT } = srv.ql(req)'.
  `)
  return module.exports
}

module.exports._reset = ()=>{ // for strange tests only
  const _name = cds.env.sql.names === 'quoted' ? n =>`"${n}"` : n => n.replace(/[.:]/g,'_')
  Object.defineProperty (Query.prototype,'valueOf',{ configurable:1, value: function(cmd=this.cmd) {
    return `${cmd} ${_name(this._target.name)} `
  }})
  return this
}
